services:
  #  spark-iceberg:
  #    image: spark-iceberg
  #    container_name: spark-iceberg
  #    # build: ./spark
  #    build:
  #      context: ./spark
  #      args:
  #        SPARK_DEFAULTS_CONF: spark-defaults-pg-catalog.conf
  #    #entrypoint: ["./entrypoint.sh", "master"]
  #    volumes:
  #      - ./warehouse:/home/iceberg/warehouse
  #      - ./notebooks:/home/iceberg/notebooks
  #      - ./data:/opt/spark/data
  #      - ./spark_apps:/opt/spark/apps
  #      - ./spark-logs:/opt/spark/spark-events
  #    networks:
  #      - ib-network
  #    ports:
  #      - "8888:8888"
  #      - "8080:8080"

  pg-catalog:
    image: postgres:latest
    container_name: pg_catalog
    environment:
      POSTGRES_USER: iceberg
      POSTGRES_PASSWORD: iceberg
      POSTGRES_DB: iceberg
    networks:
      - ib-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U iceberg -d iceberg"]
      interval: 5s
      timeout: 5s
      retries: 5

  trino:
    container_name: trino_iceberg
    image: trinodb/trino:latest
    ports:
      - "9080:9080"
    networks:
      - ib-network
    volumes:
      - ./trino/catalog:/etc/trino/catalog
      - ./trino/config.properties:/etc/trino/config.properties
    depends_on:
      #      minio_iceberg:
      #        condition: service_healthy
      pg-catalog:
        condition: service_healthy

  minio_iceberg:
    container_name: minio_iceberg
    image: minio/minio:latest
    networks:
      - ib-network
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    volumes:
      - ./warehouse:/minio/data
    ports:
      - "9090:9090"
      - "9000:9000" # this ia api port
    command: server /minio/data --console-address ":9090"
    #    healthcheck:
    #      test:
    #        [
    #          "CMD-SHELL",
    #          "mc alias set minio http://localhost:9000 $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD} && mc mb minio/warehouse && mc anonymous set public minio/warehouse",
    #        ]
    #      interval: 5s
    #      timeout: 5s
    #      retries: 5

networks:
  ib-network:
    driver: bridge
